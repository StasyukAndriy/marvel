{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","resources/img/UW.png","components/comicsList/ComicsList.js","components/pages/SecondPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ComicsList","marvelService","useMarvelService","loading","error","useState","comicsList","setComicsList","offset","setOffset","newItemLoading","setNewItemLoading","onRequest","initial","onCharListLoading","getAllComics","then","res","onCharListLoaded","useEffect","newComicsList","items","elements","map","item","i","imgStyle","thumbnail","className","end","to","id","style","src","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","onClick","disabled","SecondPage"],"mappings":"yJAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6GIL/E,I,yDC0EAC,EAjEI,WACf,IAAMC,EAAgBC,cACfC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,MAChB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAEMC,EAAY,SAACJ,EAAQK,GACvBC,EAAkBD,GAElBZ,EAAcc,aAAaP,GAC1BQ,MAAK,SAAAC,GAAG,OAAEC,EAAiBD,OAEhCE,qBAAU,WACNP,EAAUJ,GAAQ,KACnB,IACH,IAAMM,EAAoB,SAACD,GAEbF,GAAVE,IAEEK,EAAmB,SAACE,GAEtBb,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBc,OAE/CX,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BM,GAAkB,IAyBhBO,EAtBc,SAACA,GACjB,IAAMC,EAAYD,EAAME,KAAI,SAACC,EAAMC,GAC/B,IAAIC,EAAW,CAAC,UAAc,SAI9B,MAHuB,wEAAnBF,EAAKG,YACLD,EAAW,CAAC,UAAc,UAG7B,oBAAaE,UAAU,eAAvB,SACI,eAAC,IAAD,CAAMC,IAAI,OAAOC,GAAE,kBAAaN,EAAKO,IAArC,UACI,qBAAKC,MAAON,EAAUO,IAAKT,EAAKG,UAAWO,IAAI,eAAeN,UAAU,qBACxE,qBAAKA,UAAU,oBAAf,SAAoCJ,EAAKW,QACzC,qBAAKP,UAAU,qBAAf,SAAqCJ,EAAKY,MAAM,UAJ9CX,MASf,OACI,oBAAIG,UAAU,eAAd,SACKN,IAICe,CAAY/B,GACpBgC,EAAelC,EAAQ,cAACmC,EAAA,EAAD,IAAkB,KACzCC,EAAUrC,IAAYO,EAAiB,cAAC+B,EAAA,EAAD,IAAa,KAC1D,OACI,sBAAKb,UAAU,eAAf,UACQP,EACAiB,EACAE,EACJ,wBAAQE,QAAS,kBAAI9B,EAAUJ,GAAQ,IAAQmC,SAAUjC,EAAgBkB,UAAU,mCAAnF,SACI,qBAAOA,UAAU,QAAjB,6BCvDDgB,UAVI,WAEf,OACI,mCACI,cAAC,EAAD","file":"static/js/7.e2ddf397.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","import './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../../style/button.scss';\nconst ComicsList = () => {\n    const marvelService = useMarvelService()\n    const {loading, error} = marvelService;\n    const [comicsList, setComicsList] = useState([])\n    const [offset, setOffset] = useState(9);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    // console.log(marvelService.getAllComics())\n    const onRequest = (offset, initial)=>{\n        onCharListLoading(initial);\n        // console.log(marvelService.getAllComics(offset))\n        marvelService.getAllComics(offset)\n        .then(res=>onCharListLoaded(res))\n    }\n    useEffect(()=>{\n        onRequest(offset, true)\n    }, [])\n    const onCharListLoading = (initial) => {\n\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n    }\n    const onCharListLoaded = (newComicsList) => {\n       \n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        \n        setOffset(offset => offset + 9);\n        onCharListLoading(true)\n    }\n//    console.log(comicsList)\n    const renderItems = (items)=>{\n        const elements =  items.map((item, i)=>{\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n             <li  key={i} className=\"comics__item\">\n                 <Link end='true' to={`/comics/${item.id}`}>\n                     <img style={imgStyle} src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                     <div className=\"comics__item-name\">{item.title}</div>\n                     <div className=\"comics__item-price\">{item.price+'$'}</div>\n                 </Link>\n             </li>\n            )\n        })\n        return(\n            <ul className=\"comics__grid\">\n                {elements}\n            </ul>\n        )\n    }\n    const items = renderItems(comicsList)\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    return (\n        <div className=\"comics__list\">\n               {items}\n               {errorMessage}\n               {spinner}\n            <button onClick={()=>onRequest(offset, false)} disabled={newItemLoading} className=\"button button__main button__long\">\n                <div   className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","\r\nimport ComicsList from '../comicsList/ComicsList'\r\nimport { useState } from \"react\";\r\nconst SecondPage = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <ComicsList/>\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\nexport default SecondPage;"],"sourceRoot":""}